/// this is a topic about basic concept of data structure ///

两大主线：
    首先，如何根据统一的接口规范来定制并且实现一个数据结构。
        ADT/implementation 
        
    另外，也会围绕最基本的数据结构，展示如何通过更加有效的算法，使得我们提供的接口更加高效率地工作，
        argorithms
            search
            sorting

抽象数据类型：abstract data type 
    = 数据模型 + 定义在该模型上的一组操作。
    特点：
        抽象定义    外部的逻辑特性         操作&语义
        一种定义    不考虑时间复杂度       不涉及数据的存储方式 
        
数据结构：data structure
    = 基于某种特定语言，实现ADT的一整套算法。
    特点：
        具体实现    内部的表示与实现    完整的算法
        多种实现    与复杂度密切相关    要考虑数据的具体存储机制
        
数据结构与抽象数据类型关系：
    数据结构比作某种产品，比如车；相关的有两类人，首先是用户，笼统的称之为application，另一类人是汽车产品的设计和制造者，称之为implementation，
    这两类人所关心的，以及他们的职责是不同的，作为用户而言，它只关心产品的外在特性，能够提供的功能；而实现者呢，则要对这些功能以及特性具体如何落实负责；
    我们说，在这二者之间，实际上是有某种形式的一个协议，没错也就是使用说明书，产品手册，而这种手册在数据结构的使用者与数据结构的内部算法的实现者之间达成了这么一个协议ADT，一个规范ADT，两类人可能互不见面互不相识，但是他们通过这样一个协议、规范，可以彼此之间很好地沟通，并且有效的合作。       
    
    关系如下：
      汽车用户                  ADT              汽车制造者    
    Application    <==>     interface   <==>  implementation 
    


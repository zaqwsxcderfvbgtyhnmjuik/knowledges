/// this is a topic about tree ///

// 树(tree)定义：
      是n(n>=0)个结点的有限集。
          若n=0，称为空树；
          若n>0，则它满足如下条件：
              有且仅有一个特定的结点称为根节点root;
              其余的结点可以分为m(m>0)个互不相交的有限集T1,T2,T3,...,Tm，其中每一个集合本身又是一棵树，并称为根的子树(subtree)。
              
// 树的基本术语
      结点：数据元素以及指向子树的分支的地址。
        根节点：非空树中无前驱结点的结点；
        结点度：结点拥有的子树数量；
        树的度：树内各结点的度的最大值；
        终端结点/叶子结点：度为0的结点；
        非终端结点/分支结点：度不为0的结点，包括根节点；
        内部结点：度不为0，且除了根结点的结点；
      
      孩子、双亲、兄弟、堂兄弟、祖先、子孙：结点的子树的根为该节点的孩子；该结点称为孩子的双亲；具有共同双亲的结点；双亲在同一层的结点；从根节点到该结点所经过分支上的所有结点；以某结点为根的子树中的任意结点；
      
      数的深度：树中结点的最大层次(k>=1)。
      
      有序树：树中结点的各子树从左至右有次序（最左边的为第一个孩子）；
      无序树：树中结点的各子树无次序，如不分左右孩子；
      
      森林：是m(m>=0)棵互不相交的树的集合；
          树一定是森林，森林不一定是树；
          
  // 树结构与线性结构比较
                            线性结构                      树结构
        第一个数据元素：      无前驱                         根节点（只有一个）无双亲       
        最后一个数据元素：    无后继                         叶子结点（可以多个）无孩子
        其他数据元素：        一个前驱，一个后继 <==>一对一   其他节点——中间结点  一个双亲，多个孩子<==>一对多
      
      

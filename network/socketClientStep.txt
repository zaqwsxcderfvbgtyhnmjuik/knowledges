#define _WINSOCK_DEPRECATED_NO_WARNINGS 
#include <stdio.h>
#include <stdlib.h>
#include<iostream>
#include<string>
#include<cstring>
#include<WS2tcpip.h>
#include <WinSock2.h>
#include<Windows.h>
#pragma comment(lib, "ws2_32.lib")  //加载 ws2_32.dll
using namespace std;

int main()
{
	cout << "-----------客户端-----------" << endl;

	// 第一步：导入套接字库到应用程序中来
	WSADATA wsadata;
	WSAStartup(MAKEWORD(2, 2), &wsadata);


	// 第二步：创建套接字
	SOCKET clientSocket = {};
	clientSocket = socket(PF_INET, SOCK_STREAM, 0);
	if (SOCKET_ERROR == clientSocket) {
		cout << "套接字闯创建失败!" << endl;
	}
	else {
		cout << "套接字创建成功!" << endl;
	}


	// 第三步：连接服务端套接字（指定IP地址和端口号）
	sockaddr_in socketAddr;
	socketAddr.sin_family = PF_INET;
	socketAddr.sin_addr.S_un.S_addr = inet_addr("127.0.0.1");
	socketAddr.sin_port = htons(1234);
	int cRes = connect(clientSocket, (SOCKADDR*)&socketAddr, sizeof(SOCKADDR));
	if (SOCKET_ERROR == cRes) {
		cout << "客户端:\t\t与服务器连接失败....." << endl;	
	}
	else {
		cout << "客户端:\t\t与服务器连接成功....." << endl;		
	}


	// 第四步：发送请求
	char sendBuf[1024] = "from Client:   hello service.";
	send(clientSocket, sendBuf, strlen(sendBuf), 0);


	// 第五步：接收数据
	char recvBuf[1024] = {};
	recv(clientSocket, recvBuf, 1024, 0);
	cout << "客户端接收数据	:	" << recvBuf << endl << endl;
	

	// 第六步：关闭客户端socket
	closesocket(clientSocket);


	// 第七步：移除套接字库从应用程序中
	WSACleanup();

	cout << "客户端退出" << endl;
	cin.get();
	return 0;
}



/// this is a topic about compile-time cheak of type cheak ///

// type cheak,类型检查
    定义：指验证操作接收的是否为合适的类型数据以及赋值是否合乎类型要求。
    
// 类型长度检查
    a.指针长度检查：
      static_assert(sizeof(void *) == 4, "64-bit code generation is not supported.");//该static_assert用来确保编译仅在32位的平台上进行，不支持64位的平台，该语句可以放在文件的开头处，这样可以尽早检查，以节省失败情况下的编译时间。
    
    b.整形长度检查:
      #define STATIC_ASSERT(_cond,_name)  typedef char STATIC_ASSERT_FAILED_ ## _name [ (_cond) ? 1 : -1 ] // 通过char myArray[-1]报错：数组的大小必须大于0，进行编译时检查
      #define STATIC_SIZE_ASSERT(_type,_size) STATIC_ASSERT ( sizeof(_type)==_size, _type ## _MUST_BE_ ## _size ## _BYTES )
      STATIC_ASSERT(1, int);
      STATIC_SIZE_ASSERT(long, 8);
      


    

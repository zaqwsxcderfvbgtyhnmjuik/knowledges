/// a topic about computer architecture basic concepts ///

动机
    掌握现代计算机体系结构基本概念、设计思想和实现技术
    了解典型计算机的结构和工作原理
    了解先进计算机体系结构 设计中的关键技术
    学习计算机性能分析和评价的基本方法

背景
    1946年，生于匈牙利的美国数学家冯·诺依曼提出了 存储程序计算机——stored-program computer；也称为 冯·诺依曼结构计算机，是现代计算机所使用的标准结构，沿用至今，没有根本性变化，是计算机体系结构研究的基础。
    
存储程序计算机
    集程序和数据放一起的一种计算机系统设计模型；实现了一种通用图灵机。
    组成部分：
        运算器
        存储器
        输入/输出设备
        控制器
    
    结构图
                 控制器
        输入设备  运算器 输出设备
                 存储器
    特点
        1) 以运算器为中心
        2) 程序（指令）和数据放在同一存储器中
        3) 存储器是按地址访问的、线性编址的空间
        
        4) 控制流由指令流产生 <==> 所谓的算法就是按照一个顺序的控制流对数据流来完成进行加工的。※
        5) 指令由操作码和地址码组成 <==> 
            操作码告诉机器（运算器）做什么样的工作（谓语）；
            地址码告诉机器（运算器）对谁完成这样的工作（宾语）；
            主语就是运算器，所有的操作都由唯一的主语也就是运算器来完成；<==而运算器完成的工作，是由控制器来完成的。※
            
        6) 数据以二进制编码表示，采用二进制运算
        
程序执行和指令的操作
    程序执行过程
        a. 分解程序指令，形成控制四个部分（运算器、存储器、控制器、输入输出设备）工作的控制流；
        b. 对数据进行加工（运算），形成数据流；<==>控制流对数据进行加工得到数据流
        c. 周而复始地产生指令流、数据流，并最终得到结果；
        
    指令的操作：本教材中
        取指令——》指令译码——》取操作数——》运算——》结果写回——》取指令——》...
        等价于：
        一个机器周期里面安排的操作序列※
            1.计算机从存储器中取出一条指令
            2.对这条指令进行译码
                ⑴分解并确定这条指令所指示的操作
                ⑵确定操作对象（操作数）所在位置
                    ①某个寄存器单元、存储器单元或输入设备
            3.取操作数并送到运算器
            4.运算器按照译码确定的操作进行运算
            5.运算结束后，将结果写到指定位置
            6.计算机准备执行下一条指令...
    
计算机体系结构概念定义
    计算机体系结构是程序员（汇编语言、机器语言程序员）所看到的计算机的属性，即概念性结构与功能特性；
        1964年4月，阿姆道尔首次明确定义；
        计算机体系结构概念的经典定义；

    程序员所看到的计算机的属性（对于通用寄存器型机器，这些属性主要是指）
        1.数据表示：硬件能 直接 辨认和处理的数据类型，如整数、浮点、字符串等；
        2.寻址规则：访问存储器部件的时候，存储器的最小寻址单元、寻址方式及其表示；
        3.寄存器定义：寄存器的定义（状态寄存器A、程序计数器IP等）、数量和使用方式；
        4.指令系统：机器指令的操作类型和格式、指令间的排序和控制机构（如汇编指令JE :等于则跳转）等
        5.中断系统：中断的类型和中断响应硬件 的功能；
        6.机器工作状态的定义和切换：如管态和目态（内核态和用户态）等
        7.存储系统：程序员可用的最大存储容量
        8.信息保护：信息保护方式和硬件的支持
        9.I/O结构：I/O寻址方式、数据传送的方式
        
计算机组成
    指令集结构的逻辑实现
        1.数据通路宽度
        2.各种操作对功能部件的共享程度
        3.专用功能部件的设置
        4.功能部件的并行性
        5.缓冲和排队技术
        6.预测技术
        7.可靠性技术（卫星等特殊工作环境）
        8.控制机构的组成（单线程、多线程、多进程等）<==最前沿最复杂的问题
        9.其他

计算机实现
    也就是我们所看见的计算机的物理实体；
        1.处理器（CPU）、主存（内存条）的物理结构
        2.器件的集成度和速度
        3.信号传输
        4.器件、模块、插件、底板的划分与连接线
        5.涉及的专用器件
        6.电源、冷却（铜管）
        7.微组装技术
        8.整机装配技术
        9.其他
        
计算机体系结构的概念：本课程
    1.体系结构的概念用于描述计算机系统设计的技术、方法和理论。
    2.主要包括计算机指令系统、计算机组成和计算机硬件实现三个方面
    3.涵盖处理器和多处理器、存储器、输入/输出系统、互联与通讯等计算机系统设计的主要内容
    4.涉及到性能评价、少量编译和操作系统技术
    5.通过定量分析的途径、学习掌握现代计算机体系结构研究的基本方法
        定量分析方法是90年代以来，计算机系统设计所采用的最有效的途径；近几十年来计算机的飞速发展与采用定量分析方法是密切相关的，也是学习和掌握现代计算机系统结构设计的基本方法※

不同年代计算机体系结构研究的变化
    年代              一些重要研究内容                                                    典型计算机
    1940年代          程序控制计算机、存储程序计算机                                       EDVAC（第一台采用存储程序方式工作的计算机）                                       <== 更多关注机器是采用什么方式来工作的，比如采用存储程序方式，还是采用程序控制方式来工作
    1960年代          指令系统                                                           IBM 360系列机（一套比较完备的指令系统，可以指导很长时间的软件开发和硬件系统的稳定性）<== 更多关注指令系统，因为指令系统涉及到机器的复杂性，每一条指令都会带来相当复杂的硬件实现，这时候指令系统增加一条指令，就会带来很大的计算机的硬件成本开销，也会大幅度地降低计算机的可靠性（当时很多机器采用电子管来做的），硬件的复杂性使得计算机系统的设计人员在确定使用什么样的指令的时候就有很强的选择性           
    1960年代末        阵列机和并行处理                                                    ILLIAC IV                                                                     <== 开始关注阵列机和并行计算，是对计算机性能的追求而带来的一个问题，是一种以量取胜的加速方法
    1970年代          流水线、向量处理、微处理器                                           Cray-1（向量巨型机，人类计算的能力首次突破每秒亿次的大关。1983年12月22日，我国第一台亿次巨型计算机“银河”研制成功） Intel 4004（人类历史上第一个微处理器）  <== 可以用于天气预报、石油勘探等场景
    1980年代          RISC（Reduced Instruction Set Computing，精简指令集）、cache、流水线 MIPS R10000、POWER（RISC处理器） <== RISC技术诞生了，体系结构关注的是RISC以及RISC所需要的cache技术（cache技术产生于60年代，但是一直被认为是比较贵的大型的机器所采用的的技术）到80年代，随着微处理器的产生、RISC技术的产生，cache成了支持RISC发展的核心技术；同时得到进一步发展的还有流水线技术。                  
    1990年代          SMP（Symmetrical Multi-Processing，对称多处理）、指令级并行          MIPS R100000、PowerPC 604        <== 体系结构所关注的是一个芯片上到底能做几个处理器，多处理器是如何联系到一起进行工作的，一个处理器上到底可以同时运行多少个指令，关心对称多处理、片上多处理以及指令级并行是如何实现的。    
                      CMP（Chip Chip multiprocessors，单芯片多处理器）
    2000年代          SMT、低功耗、Multi-core、stream                                     Intel i7、power 6、ARM、GPU     <== 除了更多地关注并行以外，在芯片上运行多个程序，也就是多线程技术，称为体系结构的关注的最核心的问题，产生了SMT技术。    
    
    体系结构所关注的内容是变化的，是一个活的过程，在以后工作学习过程中，我们所关注的体系结构领域还会不断的发生变化。
    
计算机系统中的层次概念
    软硬件功能等效和分配问题
        软硬件功能等效：对于某一个功能，可以用软件去实现，也可以用硬件去实现；从功能上，软件和硬件的实现是等效的，在执行效率和成本上是不同的。
    
    从计算机语言角度，把计算机系统按照功能分成多级层次结构，以对整个系统进行描述、分析、设计和使用
        第六级:应用语言虚拟机
            1.为使计算机满足某种用途而专门设计的（人工智能、教育、行政管理、计算机设计、数据库查询语句）
            2.应用语言编写的程序一般是由应用程序包翻译到第五级上
        第五级:高级语言虚拟机
            1.机器语言就是各种高级语言
            2.用这些语言所编写的程序一般是由称为编译程序翻译到第四级和/或第三级上
            3.个别高级语言也用解释的方法实现转化
        第四级:汇编语言虚拟机 <==是一个完整的语言层，是一个帮助记忆的机器语言层，加上操作系统所提供的系统功能调用。
            1.用汇编语言编写的程序，首先翻译或解释成第三级（操作系统指令）和/或第二级语言（机器语言指令），然后再由相应的机器执行
            2.完成汇编语言翻译的程序就叫做汇编程序，又叫汇编器。
        第三级:操作系统虚拟机
            1.直接管理传统机器（机器语言级）中软硬件资源；
            2.是传统机器的引申
            3.提供了传统机器（机器语言级）所没有的某些基本操作和数据结构（这些内容都是一个硬件所不能完成的，而这些工作都是由操作系统来完成）※
                a.文件系统
                b.虚拟存储系统
                c.多道程序系统
                d.多线程管理等
        第二级:机器语言虚拟机   <== 软/硬件分界处，向上是软件，向下是硬件；
            1.传统机器级（机器语言级）的语言是该机的指令集；
            2.机器指令程序可以由微程序进行解释（仿真）；可有多个解释程序；通过仿真，实现多种指令集
            3.也可以没有微程序机器级，直接由硬件的组合逻辑电路来实现机器语言指令集。※
        第一级:微程序机器级
            1.微程序机器级的机器语言是微指令集；比计算机机器语言指令更加细化的指令碎片；一般由计算机系统设计人员来完成这部分程序代码的编写。※
            2.程序员用微指令编写的微程序一般是直接由硬件解释实现的；
        
    从计算机语言角度看计算机体系结构
        计算机语言：一种虚拟的计算机系统
        对于用某一层语言编写程序的程序员，有了一种计算机，该机器能执行用该层语言写的全部程序；如下：
            应用——> 程序——>语言——>执行机制——>计算机（虚拟机）——>执行结果
        计算机语言由低级向高级发展
            高一级语言的语句相对于低级语言功能更强，更便于运用，但又都以低级语言为基础。
            
    这些分层结构中间，主要使用两种层次之间语言的转化技术：翻译和解释
        翻译
            先把N+1级程序全部变换成N级程序后，再去执行新产生的N级程序，在执行过程中N+1级程序不再被访问。<== 多对多
        解释
            每当一条N+1级指令被译码后，就直接去执行一串等效的N级指令，然后再去取下一条N+1级的指令，依此重复进行。<== 一对多
        
==>以上谈及了计算机体系结构概念，也谈到了从语言角度如何分层次地理解计算机的结构

系列机：family machine 
    概念：指在一个厂家生产的具有相同指令集结构，但具有不同组成和实现的一系列不同型号的计算机系统。
        1960年代，IBM公司在推出IBM S360时，首次提出的系列机的概念，被认为是计算机发展史上一个重要里程碑；
        各计算机厂家仍按系列机研发产品；
    发展：现代计算机不但系统系列化，其他构成部件和软件也系列化
        如微处理器（CPU），X86系列微处理器：8086,80286,80386,80486一直到现在的酷睿、i7等，构成了一个系列的处理器
        如操作系统，windows系列操作系统，linux系列操作系统
        如硬盘、高级语言等
    
软件兼容
    目标：长期以来，程序员希望有一个稳定的软件环境，使他们编写出来的程序能够在更加广泛计算机类型中得到长期的运用。
    概念：software compatibility
        系列机具有相同的体系结构，软件可以在系列计算机的各档机器上运行；
        同一个软件可以不加修改地运行于体系结构的各档机器，而且它们所获得的结果一样，差别只在于有不同的运行时间；
        兼容分为二进制级兼容、汇编级兼容、高级语言兼容、数据级兼容等
    类型：向前兼容、向后兼容；向上兼容、向下兼容
    

        
    
    
    
